<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>